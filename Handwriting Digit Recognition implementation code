{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Library"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import cv2 as cv\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from skimage.feature import local_binary_pattern\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAbIAAAF2CAYAAAALCh2+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy80BEi2AAAACXBIWXMAAA9hAAAPYQGoP6dpAABLWUlEQVR4nO3deXgUVdo28LuzdUL2BMjCEiBgABFwImQishjQkEGWIaCo7wDK4JYwsr2jjI4sLkFxFHAiKGKAEWQEBGdQQUEWF0ABETGCgEQQSFiTQMje5/uDr/tNp8/pVHUa0xXu33X1dZHT1VWnqrt4annqOSYhhAAREZFBeTV0B4iIiOqDgYyIiAyNgYyIiAyNgYyIiAyNgYyIiAyNgYyIiAyNgYyIiAyNgYyIiAyNgYyIiAyNgYyIfhP9+vVDv379Grob1AgxkJHLysvL8cQTTyA2NhYBAQFISkrCp59+qmseM2bMgMlksr2aNGmC1q1bY/DgwcjJyUF5ebnL/fvoo48wY8YMlz8PABUVFZg3bx5uvvlmhISEICwsDDfeeCMeeughHDx4UPf8Tp06hRkzZmDfvn0O773//vu455570K5dOzRp0gQJCQmYMmUKCgsLXer7yZMncffddyMsLAwhISEYOnQofv75Z+m0ixcvRqdOneDv748OHTrgtddec5hm7dq1SE1NRWxsLMxmM1q2bIkRI0bgwIEDLvWPyF1MrLVIrrr33nuxevVqTJw4ER06dMCSJUvwzTffYMuWLbjttts0zWPGjBmYOXMmFixYgKCgIJSXl+PkyZPYuHEjvvrqK3Tt2hXr169Hq1atdPcvMzMT2dnZqM9PfPDgwfj4449x7733Ijk5GZWVlTh48CDWr1+PZ599FmPHjtU1v927d6NHjx7Iyclx+GzTpk0RGxuLYcOGoXXr1vj++++xcOFCtGvXDnv37kVAQIDm5Vy+fBm/+93vUFRUhClTpsDX1xevvvoqhBDYt28fIiMjbdO+8cYbeOSRR5Ceno7U1FR8/vnn+Ne//oXZs2fjiSeesE03a9Ys5Obm4uabb0bTpk2Rn5+Pt99+G6dPn8aOHTvQrVs3p32qqKgAAPj5+WleDyJNBJELdu3aJQCIOXPm2NpKS0tFfHy8SE5O1jyf6dOnCwDi7NmzDu+98847wsvLSyQlJbnUx4yMDFGfn/jXX38tAIjnn3/e4b2qqipx7tw53fP85ptvBACRk5Pj8N6WLVsc2pYuXSoAiEWLFulazosvvigAiK+//trW9uOPPwpvb28xbdo0W9uVK1dEZGSkGDRokN3n77//fhEYGCguXLjgdDn5+fnCx8dHPPzww7r6R+RODGTkkv/93/8V3t7eoqioyK79hRdeEADE8ePHNc3HWSATQoiHHnpIABCffPKJrW379u1ixIgRolWrVsLPz0+0bNlSTJw4UVy5csU2zZgxYwQAh5fVnDlzRHJysoiIiBD+/v7id7/7nVi1apXdst99910BQGzdulXTuvz666/igQceEM2bNxd+fn6ic+fOYvHixbb3t2zZIu2TLKhZFRcXCwBi8uTJmvpg1aNHD9GjRw+H9jvvvFPEx8fb/v7www8FAPHhhx/aTffVV18JAOJf//qX0+VYLBYREhIi7rnnnjr71LdvX9G3b1/b39btsXLlSjFt2jQRFRUlmjRpIgYPHiz9/fzzn/8Ubdu2Ff7+/qJHjx5i+/btDvOk6xPvkZFLvv32W9xwww0ICQmxa+/ZsycASO8BueJPf/oTAOCTTz6xta1atQpXrlzBo48+itdeew2pqal47bXXMHr0aNs0Dz/8MO644w4AwL/+9S/by8p632vWrFl44YUX4OPjg5EjR+LDDz+0TRMXFwcAWL58Oaqqqpz2s6CgAL///e+xadMmZGZmYt68eWjfvj3GjRuHuXPnAgA6deqEWbNmAQAeeughW5/69OmjnG9+fj6Aq5cdtbJYLNi/fz9uueUWh/d69uyJo0eP4tKlSwCufo8AHKZNTEyEl5eX7f2aCgsLcfbsWXz//ff485//jOLiYvTv319z/2p7/vnn8eGHH+KJJ57AX/7yF3z66acYMGAASktLbdMsWLAAmZmZaNmyJV566SX07t0bw4YNw6+//urycqkRaehISsZ04403ipSUFIf2H374QQAQCxcu1DSfus7ILl68KACIP/7xj7a2mmdeVllZWcJkMolffvnF1ubs0mLteVRUVIguXbrYrZPFYhF9+/YVAERUVJS49957RXZ2tt0yrMaNGydiYmIcLjeOGjVKhIaG2pbn7NKizLhx44S3t7f46aefNE0vhBBnz54VAMSsWbMc3svOzhYAxMGDB4UQV7eRt7e3dD7NmjUTo0aNcmhPSEiwnU0GBQWJp59+WlRXV9fZ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zp07Cx8fH7s+19wOtV+upJifOHFCjBgxQoSEhIigoCBx1113icOHD0unffPNN0VCQoLw8/MT8fHx4tVXXxUWi8VumunTp4tbbrlFhIeHCx8fHxEbGytGjRol9u/f7zC/uLg4ERcXZ9emSr9/9913xbRp00Tz5s1FQECAGDRokPQRh/nz54u4uDhhNptFz549xZdffikSExPFwIEDdW8balxYa5GIfhO9e/eG2WzGpk2bAABbt27F7bffjlWrVmHEiBG652exWNCsWTMMHz4cixYtcnd3yUB4j4yIfhOnT5/WVaGkprKyMofiz8uWLcOFCxc4NAzxHhldG0VFRXU+FB0dHf0b9abxuHDhgvK5L+BqIkt9kkSuha+++grvv/8+jh49aldNX4+dO3di0qRJGDlyJCIjI7F3714sXrwYXbp0sUteoesTAxldE48//jiWLl3qdBpe1dZv+PDh2LZtm/L9uLg4TQkWv6VFixbh448/xsSJE/HAAw+4NI82bdqgVatWmD9/Pi5cuICIiAiMHj0as2fP5rAwxPHI6NrIzc3FqVOnnE5T1zNX5GjPnj1OU84DAgLQq1ev37BHRA2PgYyIiAyNyR5ERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGRERGRoDGTkkq1bt8JkMmHr1q26P5uXlweTyYQlS5a4vV81tWnTBmPHjr2myyCihsdABmDJkiUwmUzYvXt3Q3flmjt//jz+93//FwkJCfD390dERARSU1Oxfv36hu4aXeeup/2Q3MunoTtAv51Dhw6hf//+OHv2LB544AHccsstKCwsxPLlyzF48GBMnToVc+bM0TSvPn36oLS0FH5+frr7ERcXh9LSUvj6+ur+LBFRbQxk14nKykqMGDECFy9exPbt25GUlGR7b9KkSbj//vvx8ssv45ZbbsE999yjnE9ZWRn8/Pzg5eUFf39/l/piMplc/izR9aiqqgoWi8WlA8frAS8tKowdOxZBQUE4fvw47rrrLgQFBaFFixbIzs4GAHz//fdISUlBYGAg4uLisGLFCrvPX7hwAVOnTsVNN92EoKAghISEIC0tDd99953Dsn755RcMGTIEgYGBaN68OSZNmoSNGzdK70Ht2rULAwcORGhoKJo0aYK+ffviyy+/rHN91qxZgwMHDuDJJ5+0C2IA4O3tjTfeeANhYWGYMWOGrd16H2zlypV4+umn0aJFCzRp0gTFxcXKe2TZ2dlo164dAgIC0LNnT3z++efo168f+vXrZ5tGdo/Mur1PnjyJYcOGISgoCM2aNcPUqVNRXV1tt4yXX34Zt956KyIjIxEQEIDExESsXr26zm1AxtPY9kPg6sHgjBkzcMMNN8Df3x8xMTEYPnw4jh49CuD/9o+XX34Zc+fORXx8PMxmM3JzcwEAn332GXr37o3AwECEhYVh6NCh+PHHH+2WMWPGDJhMJhw8eBB33303QkJCEBkZiccffxxlZWWa+mkkPCNzorq6GmlpaejTpw9eeuklLF++HJmZmQgMDMRTTz2F+++/H8OHD8fChQsx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",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Directory containing the images\n",
    "file_image = './Data/DataSet_02'\n",
    "\n",
    "# Get a list of all files in the directory\n",
    "file_path = os.listdir(file_image)\n",
    "\n",
    "# Directory to save processed images\n",
    "output_dir = './Proses/crop/'\n",
    "\n",
    "# Create the output directory if it does not exist\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Menginisialisasi penghitung untuk gambar yang ditampilkan\n",
    "dis_count = 0\n",
    "\n",
    "for filename in file_path:\n",
    "    if filename.endswith('.jpg'):\n",
    "        # Construct full file path\n",
    "        full_path = os.path.join(file_image, filename)\n",
    "        \n",
    "        label = int(filename.split('_')[0])\n",
    "        \n",
    "        # Read the original image using OpenCV\n",
    "        original_image = cv.imread(full_path)\n",
    "        \n",
    "        # Convert image to grayscale\n",
    "        gray_image = cv.cvtColor(original_image, cv.COLOR_BGR2GRAY)\n",
    "        \n",
    "        # Find contours\n",
    "        contours, _ = cv.findContours(gray_image, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)\n",
    "        \n",
    "        for contour in contours:\n",
    "            # Get bounding box for each contour\n",
    "            x, y, w, h = cv.boundingRect(contour)\n",
    "            \n",
    "            # Crop the character from the image\n",
    "            x_crop = max(0, x + 3)\n",
    "            y_crop = max(0, y + 3)\n",
    "            w_crop = max(0, w - 6)\n",
    "            h_crop = max(0, h - 6)\n",
    "            \n",
    "            if w_crop > 0 and h_crop > 0:\n",
    "                cropped_image = gray_image[y_crop:y_crop + h_crop, x_crop:x_crop + w_crop]\n",
    "\n",
    "        #  Menambah simpan hasil cropped_image\n",
    "        output_filename = os.path.join(output_dir, filename)\n",
    "        cv.imwrite(output_filename, cropped_image)\n",
    "        \n",
    "        if dis_count < 5 :\n",
    "            fig, axs = plt.subplots(1, 2, figsize=(5,5))\n",
    "            fig.suptitle(filename)\n",
    "            axs[0].imshow(original_image, cmap='gray')\n",
    "            axs[0].set_title('Image Original')\n",
    "            axs[1].imshow(cropped_image, cmap='gray')\n",
    "            axs[1].set_title('Image crop')\n",
    "            plt.show()\n",
    "            dis_count += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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L7wgMjIyzF579+5dMW7cOBEUFCQ8PDxEx44dxbFjx0SVKlXEq6++avtkUIXmIESRPhoiolJSs2ZNGAwGLF68GACwdOlSDBo0CL/88ovi4G1bMjMzUblyZUyePBnvvPOOvZtLOsJ7ZERU6u7cuYOMjAxNM5QUpTQu0TierUOHDvfRMqoIeI+MSkVWVpbNQdFBQUH/UGsqjmvXrknHfQH3ElnuJ0mkNGzduhWrV6/GrVu3TEk7Wn3++edYunQpnn76aXh5eeGHH37AqlWr0KVLF8VMSnqwMJBRqXjjjTewbNkyq3XYq61dz549kZKSIn0+NDTUYpxXWZs2bRpOnjyJ9957T1PCSlHNmjWDs7MzZsyYgezsbFMCyOTJk+3cWtIj3iOjUnH06FFcuHDBah1bY67I0oEDB6yOnfLw8OAVCj1wGMiIiEjXmOxBRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBGRES6xkBG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",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# Directory containing the images\n",
    "file_image = './Proses/crop'\n",
    "\n",
    "# Get a list of all files in the directory\n",
    "file_path = os.listdir(file_image)\n",
    "\n",
    "# Buat list untuk menyimpan fitur dan label\n",
    "features_no = []\n",
    "labels_no = []\n",
    "\n",
    "# Directory to save processed images\n",
    "output_dir = './Proses/Pre/'\n",
    "\n",
    "# Create the output directory if it does not exist\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Menginisialisasi penghitung untuk gambar yang ditampilkan\n",
    "dis_count = 0\n",
    "\n",
    "for filename in file_path:\n",
    "    if filename.endswith('.jpg'):\n",
    "        # Construct full file path\n",
    "        full_path = os.path.join(file_image, filename)\n",
    "        \n",
    "        label = int(filename.split('_')[0])\n",
    "        \n",
    "        # Read the original image using OpenCV\n",
    "        original_image = cv.imread(full_path, cv.IMREAD_GRAYSCALE)\n",
    "\n",
    "        resize_image = cv.resize(original_image, (20,20))\n",
    "        \n",
    "        feature_vector = resize_image.flatten()\n",
    "        \n",
    "        features_no.append(feature_vector)\n",
    "        labels_no.append(label)\n",
    "        \n",
    "        #  Menambah simpan hasil cropped_image\n",
    "        output_filename = os.path.join(output_dir, filename)\n",
    "        cv.imwrite(output_filename, resize_image)\n",
    "        \n",
    "        if dis_count < 5 :\n",
    "            fig, axs = plt.subplots(1, 2, figsize=(5,5))\n",
    "            fig.suptitle(filename)\n",
    "            axs[0].imshow(cv.cvtColor(original_image, cv.COLOR_RGB2BGR))\n",
    "            axs[0].set_title('Image Original')\n",
    "            axs[1].imshow(resize_image, cmap='gray')\n",
    "            axs[1].set_title('Image Preprocessing')\n",
    "            plt.show()\n",
    "            dis_count += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Esktraksi fitur"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# Directory containing the preprocessed images\n",
    "input_dir = './Proses/Pre/'\n",
    "\n",
    "# Directory to save feature extraction results\n",
    "output_dir = './Proses/EksOtsu/'\n",
    "\n",
    "# Create the output directory if it does not exist\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Buat list untuk menyimpan fitur dan label\n",
    "features = []\n",
    "labels = []\n",
    "\n",
    "# Get a list of all files in the input directory\n",
    "file_path = os.listdir(input_dir)\n",
    "\n",
    "# Menginisialisasi penghitung untuk gambar yang ditampilkan\n",
    "dis_count = 0\n",
    "\n",
    "# Iterate over each file in the directory\n",
    "for filename in file_path:\n",
    "    # Check if the file is an image file\n",
    "    if filename.endswith('.jpg'):\n",
    "        # Construct full file paths\n",
    "        input_path = os.path.join(input_dir, filename)\n",
    "        output_path = os.path.join(output_dir, filename)\n",
    "        \n",
    "        label = int(filename.split('_')[0])\n",
    "        \n",
    "        # Read the preprocessed image using OpenCV\n",
    "        preprocessed_image = cv.imread(input_path, cv.IMREAD_GRAYSCALE)\n",
    "        \n",
    "        resize_image = cv.resize(preprocessed_image, (20,20))\n",
    "        \n",
    "        # Apply Otsu's thresholding\n",
    "        _, otsu_image = cv.threshold(resize_image, 0, 255, cv.THRESH_BINARY_INV + cv.THRESH_OTSU)\n",
    "        \n",
    "        feature_vector = otsu_image.flatten()\n",
    "        \n",
    "        # Save the feature-extracted image\n",
    "        cv.imwrite(output_path, otsu_image)\n",
    "            \n",
    "        features.append(feature_vector)\n",
    "        labels.append(label)\n",
    "        \n",
    "        if dis_count < 2 :\n",
    "            # Display the original and feature-extracted images\n",
    "            fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n",
    "            fig.suptitle(filename)\n",
    "            axs[0].imshow(preprocessed_image, cmap='gray')\n",
    "            axs[0].set_title('Original Image')\n",
    "            axs[1].imshow(otsu_image, cmap='gray')\n",
    "            axs[1].set_title('Feature Extraction (Otsu Detection)')\n",
    "            plt.show()\n",
    "            dis_count += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Local Binary Pattern (LBP)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Directory containing the preprocessed images\n",
    "input_dir = './Proses/Pre/'\n",
    "\n",
    "# Directory to save feature extraction results\n",
    "output_dir = './Proses/EksLbp/'\n",
    "\n",
    "# Create the output directory if it does not exist\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Buat list untuk menyimpan fitur dan label\n",
    "features_2 = []\n",
    "labels_2 = []\n",
    "\n",
    "# Parameters for LBP\n",
    "radius = 1\n",
    "n_points = 8 * radius\n",
    "\n",
    "# Get a list of all files in the input directory\n",
    "file_path = os.listdir(input_dir)\n",
    "\n",
    "# Menginisialisasi penghitung untuk gambar yang ditampilkan\n",
    "dis_count = 0\n",
    "\n",
    "# Iterate over each file in the directory\n",
    "for filename in file_path:\n",
    "    # Check if the file is an image file\n",
    "    if filename.endswith('.jpg'):\n",
    "        # Construct full file paths\n",
    "        input_path = os.path.join(input_dir, filename)\n",
    "        \n",
    "        label = int(filename.split('_')[0])\n",
    "        \n",
    "        # Read the preprocessed image using OpenCV\n",
    "        preprocessed_image = cv.imread(input_path, cv.IMREAD_GRAYSCALE)\n",
    "        \n",
    "        resize_image = cv.resize(preprocessed_image, (20,20))\n",
    "        \n",
    "        # Apply LBP\n",
    "        lbp = local_binary_pattern(resize_image, n_points, radius, method='uniform')\n",
    "        \n",
    "        # Convert the LBP image to a histogram\n",
    "        (hist, _) = np.histogram(lbp.ravel(), bins=np.arange(0, n_points + 3),\n",
    "                                 range=(0, n_points + 2))\n",
    "        \n",
    "        # Normalize the histogram\n",
    "        hist = hist.astype(\"float\")\n",
    "        hist /= (hist.sum() + 1e-7)\n",
    "        \n",
    "        features_2.append(hist)\n",
    "        labels_2.append(label)\n",
    "        \n",
    "        if dis_count < 2:\n",
    "            # Display the original and LBP images\n",
    "            fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n",
    "            fig.suptitle(filename)\n",
    "            axs[0].imshow(preprocessed_image, cmap='gray')\n",
    "            axs[0].set_title('Original Image')\n",
    "            axs[1].imshow(lbp, cmap='gray')\n",
    "            axs[1].set_title('LBP Image')\n",
    "            plt.show()\n",
    "            dis_count += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Mengubah ke data Training dan Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No Ektraksi fitur :  (7543, 400)\n",
      "No Ektraksi fitur :  (7543,)\n",
      "Ektraksi fitur Otsu :  (7543, 400)\n",
      "Ektraksi fitur Otsu :  (7543,)\n",
      "Ektraksi fitur LBP :  (7543, 10)\n",
      "Ektraksi fitur LBP :  (7543,)\n"
     ]
    }
   ],
   "source": [
    "# Convert features and labels to NumPy arrays\n",
    "X_no = np.array(features_no)\n",
    "y_no = np.array(labels_no)\n",
    "\n",
    "X_otsu = np.array(features)\n",
    "y_otsu = np.array(labels)\n",
    "\n",
    "X_lbp = np.array(features_2)\n",
    "y_lbp = np.array(labels_2)\n",
    "\n",
    "print('No Ektraksi fitur : ', X_no.shape)\n",
    "print('No Ektraksi fitur : ', y_no.shape)\n",
    "\n",
    "print('Ektraksi fitur Otsu : ',X_otsu.shape)\n",
    "print('Ektraksi fitur Otsu : ',y_otsu.shape)\n",
    "\n",
    "print('Ektraksi fitur LBP : ',X_lbp.shape)\n",
    "print('Ektraksi fitur LBP : ',y_lbp.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7543, 400)\n",
      "(7543, 400)\n",
      "(7543, 10)\n"
     ]
    }
   ],
   "source": [
    "# Standardize the features\n",
    "scaler = StandardScaler()\n",
    "X_scaled_no = scaler.fit_transform(X_no)\n",
    "X_scaled_otsu = scaler.fit_transform(X_otsu)\n",
    "X_scaled_lbp = scaler.fit_transform(X_lbp)\n",
    "\n",
    "# Apply PCA\n",
    "pca = PCA(n_components=50)  # Reduce to 50 principal components\n",
    "X_pca = pca.fit_transform(X_scaled_no)\n",
    "\n",
    "print(X_scaled_no.shape)\n",
    "print(X_scaled_otsu.shape)\n",
    "print(X_scaled_lbp.shape)\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train_no1, X_test_no1, y_train_no1, y_test_no1 = train_test_split(X_scaled_no, y_no, test_size=0.4, random_state=42)\n",
    "X_train_no2, X_test_no2, y_train_no2, y_test_no2 = train_test_split(X_scaled_no, y_no, test_size=0.3, random_state=42)\n",
    "X_train_no3, X_test_no3, y_train_no3, y_test_no3 = train_test_split(X_scaled_no, y_no, test_size=0.2, random_state=42)\n",
    "\n",
    "X_train_pca1, X_test_pca1, y_train_pca1, y_test_pca1 = train_test_split(X_pca, y_no, test_size=0.4, random_state=42)\n",
    "X_train_pca2, X_test_pca2, y_train_pca2, y_test_pca2 = train_test_split(X_pca, y_no, test_size=0.3, random_state=42)\n",
    "X_train_pca3, X_test_pca3, y_train_pca3, y_test_pca3 = train_test_split(X_pca, y_no, test_size=0.2, random_state=42)\n",
    "\n",
    "X_train_otsu1, X_test_otsu1, y_train_otsu1, y_test_otsu1 = train_test_split(X_scaled_otsu, y_otsu, test_size=0.4, random_state=42)\n",
    "X_train_otsu2, X_test_otsu2, y_train_otsu2, y_test_otsu2 = train_test_split(X_scaled_otsu, y_otsu, test_size=0.3, random_state=42)\n",
    "X_train_otsu3, X_test_otsu3, y_train_otsu3, y_test_otsu3 = train_test_split(X_scaled_otsu, y_otsu, test_size=0.2, random_state=42)\n",
    "\n",
    "X_train_lbp1, X_test_lbp1, y_train_lbp1, y_test_lbp1 = train_test_split(X_scaled_lbp, y_lbp, test_size=0.4, random_state=42)\n",
    "X_train_lbp2, X_test_lbp2, y_train_lbp2, y_test_lbp2 = train_test_split(X_scaled_lbp, y_lbp, test_size=0.3, random_state=42)\n",
    "X_train_lbp3, X_test_lbp3, y_train_lbp3, y_test_lbp3 = train_test_split(X_scaled_lbp, y_lbp, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Klasifikasi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### KNN"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 60 : 40"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan No Eks: 55.37%\n",
      "Laporan Klasifikasi KNN dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.67      0.66      0.66       321\n",
      "           1       0.56      0.91      0.69       317\n",
      "           2       0.68      0.47      0.56       299\n",
      "           3       0.46      0.49      0.47       311\n",
      "           4       0.58      0.82      0.68       270\n",
      "           5       0.54      0.44      0.49       317\n",
      "           6       0.52      0.40      0.45       300\n",
      "           7       0.62      0.67      0.65       290\n",
      "           8       0.51      0.34      0.41       308\n",
      "           9       0.37      0.33      0.35       285\n",
      "\n",
      "    accuracy                           0.55      3018\n",
      "   macro avg       0.55      0.55      0.54      3018\n",
      "weighted avg       0.55      0.55      0.54      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN No Ekstraksi fitur\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_no1, y_train_no1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_no1, y_train_no1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_no1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_no1, y_pred_knn)\n",
    "print(f'Akurasi KNN dan No Eks: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_no1, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan No Eks:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan pca: 56.79%\n",
      "Laporan Klasifikasi KNN dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.67      0.69      0.68       321\n",
      "           1       0.63      0.90      0.74       317\n",
      "           2       0.65      0.54      0.59       299\n",
      "           3       0.47      0.48      0.48       311\n",
      "           4       0.62      0.80      0.70       270\n",
      "           5       0.53      0.50      0.52       317\n",
      "           6       0.53      0.43      0.47       300\n",
      "           7       0.66      0.64      0.65       290\n",
      "           8       0.48      0.36      0.41       308\n",
      "           9       0.36      0.35      0.36       285\n",
      "\n",
      "    accuracy                           0.57      3018\n",
      "   macro avg       0.56      0.57      0.56      3018\n",
      "weighted avg       0.56      0.57      0.56      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN PCA\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_pca1, y_train_pca1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_pca1, y_train_pca1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_pca1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_pca1, y_pred_knn)\n",
    "print(f'Akurasi KNN dan pca: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_pca1, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan pca:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan otsu: 62.49%\n",
      "Laporan Klasifikasi KNN dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.82      0.71      0.76       321\n",
      "           1       0.56      0.93      0.70       317\n",
      "           2       0.80      0.56      0.65       299\n",
      "           3       0.59      0.52      0.55       311\n",
      "           4       0.63      0.80      0.70       270\n",
      "           5       0.61      0.56      0.58       317\n",
      "           6       0.66      0.55      0.60       300\n",
      "           7       0.56      0.82      0.66       290\n",
      "           8       0.63      0.38      0.47       308\n",
      "           9       0.54      0.44      0.48       285\n",
      "\n",
      "    accuracy                           0.62      3018\n",
      "   macro avg       0.64      0.63      0.62      3018\n",
      "weighted avg       0.64      0.62      0.62      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Otsu\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_otsu1, y_train_otsu1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_otsu1, y_train_otsu1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_otsu1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_otsu1, y_pred_knn)\n",
    "print(f'Akurasi KNN dan otsu: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_otsu1, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan otsu:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan lbp: 16.47%\n",
      "Laporan Klasifikasi KNN dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.28      0.24      0.26       321\n",
      "           1       0.39      0.34      0.36       317\n",
      "           2       0.11      0.10      0.10       299\n",
      "           3       0.13      0.14      0.13       311\n",
      "           4       0.11      0.15      0.12       270\n",
      "           5       0.15      0.13      0.14       317\n",
      "           6       0.11      0.11      0.11       300\n",
      "           7       0.13      0.12      0.13       290\n",
      "           8       0.15      0.15      0.15       308\n",
      "           9       0.13      0.16      0.14       285\n",
      "\n",
      "    accuracy                           0.16      3018\n",
      "   macro avg       0.17      0.16      0.17      3018\n",
      "weighted avg       0.17      0.16      0.17      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Lbp\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_lbp1, y_train_lbp1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_lbp1, y_train_lbp1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_lbp1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_lbp1, y_pred_knn)\n",
    "print(f'Akurasi KNN dan lbp: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_lbp1, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan lbp:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 70 : 30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 7, 'weights': 'distance'}\n",
      "Akurasi KNN dan No Eks: 57.71%\n",
      "Laporan Klasifikasi KNN dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.71      0.72      0.71       245\n",
      "           1       0.59      0.90      0.71       240\n",
      "           2       0.72      0.47      0.57       226\n",
      "           3       0.49      0.52      0.50       224\n",
      "           4       0.63      0.78      0.70       206\n",
      "           5       0.55      0.47      0.51       232\n",
      "           6       0.53      0.44      0.48       228\n",
      "           7       0.68      0.69      0.68       218\n",
      "           8       0.51      0.37      0.43       234\n",
      "           9       0.37      0.39      0.38       210\n",
      "\n",
      "    accuracy                           0.58      2263\n",
      "   macro avg       0.58      0.58      0.57      2263\n",
      "weighted avg       0.58      0.58      0.57      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN No Ekstraksi fitur\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_no2, y_train_no2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_no2, y_train_no2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_no2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_no2, y_pred_knn)\n",
    "print(f'Akurasi KNN dan No Eks: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_no2, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan No Eks:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan pca: 58.02%\n",
      "Laporan Klasifikasi KNN dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.67      0.71      0.69       245\n",
      "           1       0.66      0.89      0.76       240\n",
      "           2       0.68      0.51      0.58       226\n",
      "           3       0.51      0.54      0.52       224\n",
      "           4       0.65      0.76      0.70       206\n",
      "           5       0.52      0.48      0.50       232\n",
      "           6       0.55      0.48      0.51       228\n",
      "           7       0.73      0.68      0.70       218\n",
      "           8       0.46      0.36      0.41       234\n",
      "           9       0.33      0.38      0.35       210\n",
      "\n",
      "    accuracy                           0.58      2263\n",
      "   macro avg       0.58      0.58      0.57      2263\n",
      "weighted avg       0.58      0.58      0.57      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN PCA\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_pca2, y_train_pca2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_pca2, y_train_pca2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_pca2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_pca2, y_pred_knn)\n",
    "print(f'Akurasi KNN dan pca: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_pca2, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan pca:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan otsu: 64.03%\n",
      "Laporan Klasifikasi KNN dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.83      0.73      0.78       245\n",
      "           1       0.58      0.94      0.71       240\n",
      "           2       0.80      0.54      0.64       226\n",
      "           3       0.56      0.54      0.55       224\n",
      "           4       0.69      0.82      0.75       206\n",
      "           5       0.63      0.61      0.62       232\n",
      "           6       0.65      0.57      0.61       228\n",
      "           7       0.58      0.83      0.68       218\n",
      "           8       0.64      0.41      0.50       234\n",
      "           9       0.56      0.43      0.48       210\n",
      "\n",
      "    accuracy                           0.64      2263\n",
      "   macro avg       0.65      0.64      0.63      2263\n",
      "weighted avg       0.65      0.64      0.63      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Otsu\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_otsu2, y_train_otsu2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_otsu2, y_train_otsu2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_otsu2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_otsu2, y_pred_knn)\n",
    "print(f'Akurasi KNN dan otsu: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_otsu2, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan otsu:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 7, 'weights': 'distance'}\n",
      "Akurasi KNN dan lbp: 17.37%\n",
      "Laporan Klasifikasi KNN dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.28      0.24      0.26       245\n",
      "           1       0.43      0.37      0.40       240\n",
      "           2       0.10      0.09      0.09       226\n",
      "           3       0.14      0.16      0.15       224\n",
      "           4       0.15      0.17      0.16       206\n",
      "           5       0.14      0.12      0.13       232\n",
      "           6       0.12      0.11      0.11       228\n",
      "           7       0.13      0.13      0.13       218\n",
      "           8       0.17      0.18      0.17       234\n",
      "           9       0.12      0.15      0.13       210\n",
      "\n",
      "    accuracy                           0.17      2263\n",
      "   macro avg       0.18      0.17      0.17      2263\n",
      "weighted avg       0.18      0.17      0.18      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Lbp\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_lbp2, y_train_lbp2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_lbp2, y_train_lbp2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_lbp2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_lbp2, y_pred_knn)\n",
    "print(f'Akurasi KNN dan lbp: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_lbp2, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan lbp:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 80 : 20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 7, 'weights': 'distance'}\n",
      "Akurasi KNN dan No Eks: 60.50%\n",
      "Laporan Klasifikasi KNN dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.72      0.72      0.72       162\n",
      "           1       0.59      0.89      0.71       161\n",
      "           2       0.75      0.50      0.60       159\n",
      "           3       0.48      0.56      0.51       141\n",
      "           4       0.69      0.82      0.75       144\n",
      "           5       0.57      0.50      0.53       150\n",
      "           6       0.55      0.54      0.54       139\n",
      "           7       0.72      0.74      0.73       159\n",
      "           8       0.55      0.39      0.46       152\n",
      "           9       0.42      0.37      0.39       142\n",
      "\n",
      "    accuracy                           0.61      1509\n",
      "   macro avg       0.60      0.60      0.59      1509\n",
      "weighted avg       0.61      0.61      0.60      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN No Ekstraksi fitur\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_no3, y_train_no3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_no3, y_train_no3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_no3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_no3, y_pred_knn)\n",
    "print(f'Akurasi KNN dan No Eks: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_no3, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan No Eks:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan pca: 60.04%\n",
      "Laporan Klasifikasi KNN dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.66      0.70      0.68       162\n",
      "           1       0.67      0.89      0.76       161\n",
      "           2       0.73      0.52      0.61       159\n",
      "           3       0.48      0.55      0.51       141\n",
      "           4       0.70      0.78      0.74       144\n",
      "           5       0.56      0.50      0.53       150\n",
      "           6       0.55      0.54      0.54       139\n",
      "           7       0.75      0.72      0.74       159\n",
      "           8       0.50      0.39      0.44       152\n",
      "           9       0.36      0.37      0.36       142\n",
      "\n",
      "    accuracy                           0.60      1509\n",
      "   macro avg       0.60      0.60      0.59      1509\n",
      "weighted avg       0.60      0.60      0.60      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN PCA\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_pca3, y_train_pca3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_pca3, y_train_pca3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_pca3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_pca3, y_pred_knn)\n",
    "print(f'Akurasi KNN dan pca: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_pca3, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan pca:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan otsu: 65.94%\n",
      "Laporan Klasifikasi KNN dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.79      0.77      0.78       162\n",
      "           1       0.59      0.94      0.73       161\n",
      "           2       0.82      0.55      0.66       159\n",
      "           3       0.61      0.62      0.61       141\n",
      "           4       0.74      0.78      0.76       144\n",
      "           5       0.60      0.57      0.58       150\n",
      "           6       0.67      0.63      0.65       139\n",
      "           7       0.62      0.84      0.71       159\n",
      "           8       0.67      0.40      0.50       152\n",
      "           9       0.56      0.46      0.50       142\n",
      "\n",
      "    accuracy                           0.66      1509\n",
      "   macro avg       0.67      0.66      0.65      1509\n",
      "weighted avg       0.67      0.66      0.65      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Otsu\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_otsu2, y_train_otsu2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_otsu3, y_train_otsu3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_otsu3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_otsu3, y_pred_knn)\n",
    "print(f'Akurasi KNN dan otsu: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_otsu3, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan otsu:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik KNN: {'algorithm': 'auto', 'n_neighbors': 9, 'weights': 'distance'}\n",
      "Akurasi KNN dan lbp: 16.96%\n",
      "Laporan Klasifikasi KNN dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.29      0.27      0.28       162\n",
      "           1       0.40      0.35      0.37       161\n",
      "           2       0.10      0.08      0.09       159\n",
      "           3       0.12      0.16      0.14       141\n",
      "           4       0.14      0.15      0.15       144\n",
      "           5       0.12      0.11      0.11       150\n",
      "           6       0.13      0.15      0.14       139\n",
      "           7       0.14      0.12      0.13       159\n",
      "           8       0.17      0.17      0.17       152\n",
      "           9       0.10      0.12      0.11       142\n",
      "\n",
      "    accuracy                           0.17      1509\n",
      "   macro avg       0.17      0.17      0.17      1509\n",
      "weighted avg       0.17      0.17      0.17      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi KNN Lbp\n",
    "param_grid_knn = {'n_neighbors': [3, 5, 7, 9], 'weights': ['uniform', 'distance'], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute']}\n",
    "knn_model = GridSearchCV(KNeighborsClassifier(), param_grid_knn, cv=5)\n",
    "knn_model.fit(X_train_lbp3, y_train_lbp3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_KNN = knn_model.best_params_\n",
    "print(\"Parameter terbaik KNN:\", best_params_KNN)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "knn_model1 = KNeighborsClassifier(**best_params_KNN)\n",
    "knn_model1.fit(X_train_lbp3, y_train_lbp3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_knn = knn_model1.predict(X_test_lbp3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_knn = accuracy_score(y_test_lbp3, y_pred_knn)\n",
    "print(f'Akurasi KNN dan lbp: {accuracy_knn * 100:.2f}%')\n",
    "\n",
    "classification_rep_knn = classification_report(y_test_lbp3, y_pred_knn)\n",
    "print('Laporan Klasifikasi KNN dan lbp:\\n', classification_rep_knn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 60 : 40"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'entropy', 'max_depth': None, 'n_estimators': 150}\n",
      "Akurasi RF dan No Eks: 83.57%\n",
      "Laporan Klasifikasi RF dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.86      0.88       321\n",
      "           1       0.85      0.95      0.90       317\n",
      "           2       0.89      0.86      0.88       299\n",
      "           3       0.76      0.80      0.78       311\n",
      "           4       0.89      0.91      0.90       270\n",
      "           5       0.81      0.85      0.83       317\n",
      "           6       0.79      0.87      0.83       300\n",
      "           7       0.75      0.91      0.82       290\n",
      "           8       0.90      0.67      0.77       308\n",
      "           9       0.87      0.68      0.77       285\n",
      "\n",
      "    accuracy                           0.84      3018\n",
      "   macro avg       0.84      0.84      0.83      3018\n",
      "weighted avg       0.84      0.84      0.83      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest No Ekstraksi fitur\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_no1, y_train_no1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_no1, y_train_no1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_no1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_no1, y_pred_rf)\n",
    "print(f'Akurasi RF dan No Eks: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_no1, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan No Eks:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': None, 'n_estimators': 150}\n",
      "Akurasi RF dan pca: 84.16%\n",
      "Laporan Klasifikasi RF dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.92      0.91      0.91       321\n",
      "           1       0.88      0.93      0.90       317\n",
      "           2       0.90      0.85      0.87       299\n",
      "           3       0.84      0.83      0.83       311\n",
      "           4       0.87      0.87      0.87       270\n",
      "           5       0.80      0.82      0.81       317\n",
      "           6       0.74      0.89      0.81       300\n",
      "           7       0.86      0.90      0.88       290\n",
      "           8       0.86      0.67      0.76       308\n",
      "           9       0.77      0.75      0.76       285\n",
      "\n",
      "    accuracy                           0.84      3018\n",
      "   macro avg       0.84      0.84      0.84      3018\n",
      "weighted avg       0.84      0.84      0.84      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest pca\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_pca1, y_train_pca1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_pca1, y_train_pca1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_pca1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_pca1, y_pred_rf)\n",
    "print(f'Akurasi RF dan pca: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_pca1, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan pca:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 20, 'n_estimators': 150}\n",
      "Akurasi RF dan otsu: 89.03%\n",
      "Laporan Klasifikasi RF dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.91      0.91       321\n",
      "           1       0.89      0.96      0.92       317\n",
      "           2       0.94      0.91      0.93       299\n",
      "           3       0.82      0.87      0.85       311\n",
      "           4       0.96      0.94      0.95       270\n",
      "           5       0.86      0.88      0.87       317\n",
      "           6       0.84      0.89      0.87       300\n",
      "           7       0.86      0.94      0.90       290\n",
      "           8       0.95      0.78      0.85       308\n",
      "           9       0.89      0.82      0.86       285\n",
      "\n",
      "    accuracy                           0.89      3018\n",
      "   macro avg       0.89      0.89      0.89      3018\n",
      "weighted avg       0.89      0.89      0.89      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest otsu\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_otsu1, y_train_otsu1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_otsu1, y_train_otsu1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_otsu1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_otsu1, y_pred_rf)\n",
    "print(f'Akurasi RF dan otsu: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_otsu1, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan otsu:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 10, 'n_estimators': 50}\n",
      "Akurasi RF dan lbp: 19.91%\n",
      "Laporan Klasifikasi RF dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.35      0.32      0.33       321\n",
      "           1       0.37      0.49      0.42       317\n",
      "           2       0.11      0.07      0.09       299\n",
      "           3       0.14      0.12      0.13       311\n",
      "           4       0.14      0.20      0.17       270\n",
      "           5       0.17      0.14      0.15       317\n",
      "           6       0.13      0.10      0.11       300\n",
      "           7       0.17      0.16      0.16       290\n",
      "           8       0.18      0.20      0.19       308\n",
      "           9       0.15      0.17      0.16       285\n",
      "\n",
      "    accuracy                           0.20      3018\n",
      "   macro avg       0.19      0.20      0.19      3018\n",
      "weighted avg       0.19      0.20      0.19      3018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest lbp\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_lbp1, y_train_lbp1)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_lbp1, y_train_lbp1)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_lbp1)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_lbp1, y_pred_rf)\n",
    "print(f'Akurasi RF dan lbp: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_lbp1, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan lbp:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 70 : 30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'log_loss', 'max_depth': None, 'n_estimators': 150}\n",
      "Akurasi RF dan No Eks: 84.89%\n",
      "Laporan Klasifikasi RF dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.87      0.90       245\n",
      "           1       0.85      0.97      0.90       240\n",
      "           2       0.90      0.87      0.89       226\n",
      "           3       0.78      0.84      0.81       224\n",
      "           4       0.89      0.90      0.90       206\n",
      "           5       0.82      0.85      0.83       232\n",
      "           6       0.80      0.89      0.84       228\n",
      "           7       0.80      0.94      0.86       218\n",
      "           8       0.90      0.67      0.77       234\n",
      "           9       0.85      0.68      0.76       210\n",
      "\n",
      "    accuracy                           0.85      2263\n",
      "   macro avg       0.85      0.85      0.85      2263\n",
      "weighted avg       0.85      0.85      0.85      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest No Ekstraksi fitur\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_no2, y_train_no2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_no2, y_train_no2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_no2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_no2, y_pred_rf)\n",
    "print(f'Akurasi RF dan No Eks: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_no2, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan No Eks:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 20, 'n_estimators': 150}\n",
      "Akurasi RF dan pca: 84.89%\n",
      "Laporan Klasifikasi RF dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      0.92      0.94       245\n",
      "           1       0.88      0.95      0.91       240\n",
      "           2       0.89      0.85      0.87       226\n",
      "           3       0.90      0.80      0.85       224\n",
      "           4       0.87      0.88      0.88       206\n",
      "           5       0.79      0.84      0.81       232\n",
      "           6       0.76      0.88      0.82       228\n",
      "           7       0.89      0.92      0.90       218\n",
      "           8       0.83      0.66      0.74       234\n",
      "           9       0.74      0.77      0.76       210\n",
      "\n",
      "    accuracy                           0.85      2263\n",
      "   macro avg       0.85      0.85      0.85      2263\n",
      "weighted avg       0.85      0.85      0.85      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest pca\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_pca2, y_train_pca2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_pca2, y_train_pca2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_pca2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_pca2, y_pred_rf)\n",
    "print(f'Akurasi RF dan pca: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_pca2, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan pca:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 30, 'n_estimators': 150}\n",
      "Akurasi RF dan otsu: 89.26%\n",
      "Laporan Klasifikasi RF dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.90      0.92      0.91       245\n",
      "           1       0.89      0.97      0.93       240\n",
      "           2       0.94      0.91      0.92       226\n",
      "           3       0.81      0.88      0.84       224\n",
      "           4       0.95      0.92      0.94       206\n",
      "           5       0.85      0.89      0.87       232\n",
      "           6       0.85      0.89      0.87       228\n",
      "           7       0.91      0.94      0.93       218\n",
      "           8       0.96      0.77      0.86       234\n",
      "           9       0.90      0.82      0.86       210\n",
      "\n",
      "    accuracy                           0.89      2263\n",
      "   macro avg       0.90      0.89      0.89      2263\n",
      "weighted avg       0.90      0.89      0.89      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest otsu\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_otsu2, y_train_otsu2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_otsu2, y_train_otsu2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_otsu2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_otsu2, y_pred_rf)\n",
    "print(f'Akurasi RF dan otsu: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_otsu2, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan otsu:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 10, 'n_estimators': 150}\n",
      "Akurasi RF dan lbp: 20.99%\n",
      "Laporan Klasifikasi RF dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.35      0.35      0.35       245\n",
      "           1       0.39      0.53      0.45       240\n",
      "           2       0.13      0.08      0.09       226\n",
      "           3       0.15      0.14      0.15       224\n",
      "           4       0.18      0.21      0.20       206\n",
      "           5       0.16      0.14      0.15       232\n",
      "           6       0.09      0.05      0.06       228\n",
      "           7       0.14      0.13      0.14       218\n",
      "           8       0.21      0.25      0.23       234\n",
      "           9       0.13      0.19      0.15       210\n",
      "\n",
      "    accuracy                           0.21      2263\n",
      "   macro avg       0.19      0.21      0.20      2263\n",
      "weighted avg       0.20      0.21      0.20      2263\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest lbp\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_lbp2, y_train_lbp2)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_lbp2, y_train_lbp2)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_lbp2)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_lbp2, y_pred_rf)\n",
    "print(f'Akurasi RF dan lbp: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_lbp2, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan lbp:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 80 : 20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'entropy', 'max_depth': 20, 'n_estimators': 150}\n",
      "Akurasi RF dan No Eks: 85.49%\n",
      "Laporan Klasifikasi RF dan No Eks:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.95      0.88      0.91       162\n",
      "           1       0.86      0.98      0.91       161\n",
      "           2       0.93      0.89      0.91       159\n",
      "           3       0.74      0.79      0.76       141\n",
      "           4       0.88      0.93      0.91       144\n",
      "           5       0.83      0.89      0.86       150\n",
      "           6       0.80      0.88      0.84       139\n",
      "           7       0.83      0.91      0.87       159\n",
      "           8       0.85      0.69      0.76       152\n",
      "           9       0.89      0.70      0.79       142\n",
      "\n",
      "    accuracy                           0.85      1509\n",
      "   macro avg       0.86      0.85      0.85      1509\n",
      "weighted avg       0.86      0.85      0.85      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest No Ekstraksi fitur\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_no3, y_train_no3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_no3, y_train_no3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_no3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_no3, y_pred_rf)\n",
    "print(f'Akurasi RF dan No Eks: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_no3, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan No Eks:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': None, 'n_estimators': 150}\n",
      "Akurasi RF dan pca: 84.49%\n",
      "Laporan Klasifikasi RF dan pca:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.92      0.92       162\n",
      "           1       0.90      0.98      0.94       161\n",
      "           2       0.89      0.80      0.84       159\n",
      "           3       0.85      0.82      0.83       141\n",
      "           4       0.86      0.89      0.87       144\n",
      "           5       0.76      0.81      0.78       150\n",
      "           6       0.75      0.86      0.80       139\n",
      "           7       0.94      0.91      0.92       159\n",
      "           8       0.83      0.72      0.77       152\n",
      "           9       0.75      0.73      0.74       142\n",
      "\n",
      "    accuracy                           0.84      1509\n",
      "   macro avg       0.84      0.84      0.84      1509\n",
      "weighted avg       0.85      0.84      0.84      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest pca\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_pca3, y_train_pca3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_pca3, y_train_pca3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_pca3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_pca3, y_pred_rf)\n",
    "print(f'Akurasi RF dan pca: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_pca3, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan pca:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'gini', 'max_depth': 20, 'n_estimators': 150}\n",
      "Akurasi RF dan otsu: 90.66%\n",
      "Laporan Klasifikasi RF dan otsu:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.89      0.94      0.92       162\n",
      "           1       0.92      0.99      0.95       161\n",
      "           2       0.96      0.89      0.92       159\n",
      "           3       0.83      0.93      0.88       141\n",
      "           4       0.94      0.95      0.94       144\n",
      "           5       0.86      0.87      0.87       150\n",
      "           6       0.84      0.89      0.87       139\n",
      "           7       0.92      0.92      0.92       159\n",
      "           8       0.96      0.85      0.90       152\n",
      "           9       0.96      0.82      0.89       142\n",
      "\n",
      "    accuracy                           0.91      1509\n",
      "   macro avg       0.91      0.91      0.91      1509\n",
      "weighted avg       0.91      0.91      0.91      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest otsu\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_otsu3, y_train_otsu3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_otsu3, y_train_otsu3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_otsu3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_otsu3, y_pred_rf)\n",
    "print(f'Akurasi RF dan otsu: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_otsu3, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan otsu:\\n', classification_rep_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter terbaik Random Forest: {'criterion': 'log_loss', 'max_depth': 10, 'n_estimators': 150}\n",
      "Akurasi RF dan lbp: 21.34%\n",
      "Laporan Klasifikasi RF dan lbp:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.33      0.38      0.35       162\n",
      "           1       0.38      0.56      0.45       161\n",
      "           2       0.10      0.06      0.07       159\n",
      "           3       0.14      0.16      0.15       141\n",
      "           4       0.17      0.17      0.17       144\n",
      "           5       0.16      0.17      0.17       150\n",
      "           6       0.13      0.08      0.10       139\n",
      "           7       0.19      0.13      0.15       159\n",
      "           8       0.19      0.22      0.21       152\n",
      "           9       0.15      0.17      0.16       142\n",
      "\n",
      "    accuracy                           0.21      1509\n",
      "   macro avg       0.19      0.21      0.20      1509\n",
      "weighted avg       0.20      0.21      0.20      1509\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Klasifikasi Random Forest lbp\n",
    "param_grid_rf = {'n_estimators': [50, 100, 150], 'criterion': ['gini', 'entropy', 'log_loss'],'max_depth': [None, 10, 20, 30]}\n",
    "rf_model = GridSearchCV(RandomForestClassifier(), param_grid_rf, cv=5)\n",
    "rf_model.fit(X_train_lbp3, y_train_lbp3)\n",
    "\n",
    "# Menampilkan parameter terbaik\n",
    "best_params_RF = rf_model.best_params_\n",
    "print(\"Parameter terbaik Random Forest:\", best_params_RF)\n",
    "\n",
    "# Membuat dan melatih model SVM dengan parameter terbaik\n",
    "rf_model1 = RandomForestClassifier(**best_params_RF)\n",
    "rf_model1.fit(X_train_lbp3, y_train_lbp3)\n",
    "\n",
    "# Memprediksi label untuk data uji\n",
    "y_pred_rf = rf_model1.predict(X_test_lbp3)\n",
    "\n",
    "# Evaluasi Klasifikasi\n",
    "accuracy_rf = accuracy_score(y_test_lbp3, y_pred_rf)\n",
    "print(f'Akurasi RF dan lbp: {accuracy_rf * 100:.2f}%')\n",
    "\n",
    "classification_rep_rf = classification_report(y_test_lbp3, y_pred_rf)\n",
    "print('Laporan Klasifikasi RF dan lbp:\\n', classification_rep_rf)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
